{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location where the resources of this template will be deployed to"
            },
            "defaultValue": "eastus"
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network name"
            },
            "defaultValue": "sofs-Vnet"
        },
        "dc1Name": {
            "type": "string",
            "metadata": {
                "description": "Domain Controller 1 Name"
            },
            "defaultValue": "DC-01"
        },
        "dc2Name": {
            "type": "string",
            "metadata": {
                "description": "Domain Controller 2 Name"
            },
            "defaultValue": "DC-02"
        },
        "dc1IpAddress": {
            "type": "string",
            "metadata": {
                "description": "Domain Controller 1 IP Address"
            },
            "defaultValue": "10.0.2.4"
        },
        "dc2IpAddress": {
            "type": "string",
            "metadata": {
                "description": "Domain Controller 2 IP Address"
            },
            "defaultValue": "10.0.2.5"
        },
        "dcVmSize": {
            "type": "string",
            "metadata": {
                "description": "Domain Controller VM Size."
            },
            "defaultValue": "Standard_DS2_v2"
        },
        "dnsDomainName": {
            "type": "string",
            "defaultValue": "sofstest.local",
            "metadata": {
                "description": "DNS domain name use to build the host's FQDN."
            }
        },
        "adDomainNetBIOSName": {
            "type": "string",
            "defaultValue": "sofs",
            "metadata": {
                "description": "NetBIOS domain name for Active Directory deployment."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Name of admin account of the VMs, this name cannot be well know names, like root, admin, administrator, guest, etc."
            },
            "defaultValue": "sofsadmin"
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Domain Administrator password"
            }
        },
        "vnetRG": {
            "type": "string",
            "metadata": {
                "description": "Resoure group name where the virtual network is located."
            }
        },
        "deploymentConfig": {
            "type": "object",
            "metadata": {
                "description": "Object that contains library paths, api versions, SAS token, from master template."
            }
        },
        "beeGfsSmbServersVip": {
            "type": "string",
            "metadata": {
                "description": "Ip Address of the BeeGFS SMB clients Load Balancer"
            }
        },
        "beeGfsSmbServerARecordName": {
            "type": "string",
            "metadata": {
                "description": "BeeGFS A record to be used by Photoscan Server (Head)."
            }
        },
        "beeGfsMasterName": {
            "type": "string",
            "metadata": {
                "description": "BeeGFS Master node VM name (single label)"
            }
        },
        "beeGfsMasterIpAddress": {
            "type": "string",
            "metadata": {
                "description": "BeeGFS Master Ip address"
            }
        },
        "adSubnetName": {
            "type": "string",
            "metadata": {
              "description": "Subnet where Domain Controllers will be deployed to"
            },
            "defaultValue": "AD-SN"
          }
    },
    "variables": {
        "installParams": "[concat(' -BeeGfsSmbServersVip ', parameters('beeGfsSmbServersVip'), ' -BeeGfsARecordName ', parameters('beeGfsSmbServerARecordName'), ' -BeeGfMasterARecordName ', parameters('beeGfsMasterName'), ' -BeeGfMasterIpAddress ',  parameters('beeGfsMasterIpAddress'), ' -domainName ', parameters('dnsDomainName'))]",
        "deploymentUniqueString": "[uniqueString(concat(deployment().name,resourceGroup().id))]",
        "faultDomains": 2,
        "updateDomains": 5,
        "managedDisksAligned": "yes",
        "avSetInfo": [
            {
                "availabilitySetName": "AD-AvSet",
                "managedDisksAligned": "yes"
            }
        ],
        "vnetId": "[resourceId(parameters('vnetRg'),'Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
        "adVMsList": [
            {
                "dataDiskCount": 1,
                "name": "[parameters('dc1Name')]",
                "storageAccountType": "Premium_LRS",
                "subnetId": "[concat(variables('vnetId'),'/subnets/',parameters('adSubnetName'))]",
                "vmSize": "[parameters('dcVmSize')]",
                "privateIpAddress": "[parameters('dc1IpAddress')]",
                "dataDiskSizeGb": 30,
                "availabilitySetId": "[resourceId('Microsoft.Compute/availabilitySets',variables('avSetInfo')[0].availabilitySetName)]",
                "imageInfo": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2016-Datacenter-Server-Core-smalldisk",
                    "version": "latest"
                }
            },
            {
                "dataDiskCount": 1,
                "name": "[parameters('dc2Name')]",
                "storageAccountType": "Premium_LRS",
                "subnetId": "[concat(variables('vnetId'),'/subnets/',parameters('adSubnetName'))]",
                "vmSize": "[parameters('dcVmSize')]",
                "privateIpAddress":  "[parameters('dc2IpAddress')]",
                "dataDiskSizeGb": 30,
                "availabilitySetId": "[resourceId('Microsoft.Compute/availabilitySets',variables('avSetInfo')[0].availabilitySetName)]",
                "imageInfo": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2016-Datacenter-Server-Core-smalldisk",
                    "version": "latest"
                }
            }
        ],
        "dnsIpAddresses": [
            "[parameters('dc1IpAddress')]",
            "[parameters('dc2IpAddress')]"
        ],
        "domainControllerDataDiskDriveLetter": "F",
        "adForestConfigModuleUrl": "[concat(parameters('_artifactsLocation'),'/dsc/AdForestConfig.zip')]",
        "additionalDcModuleUrl": "[concat(parameters('_artifactsLocation'),'/dsc/AdditionalDcConfig.zip')]",
        "primaryDcConfig": "AdForestConfig.ps1\\AdForestConfig",
        "additionalDcConfig": "AdditionalDcConfig.ps1\\AdditionalDcConfig",
        "vmsToReset": [
            "[variables('adVMsList')[1].name]"
        ],
        "nicResetScriptSettings": {
            "fileUris": [
                "[concat(parameters('_artifactsLocation'),'/scripts/reset_win_vm_nic.ps1', parameters('_artifactsLocationSasToken'))]"
            ],
            "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File ./scripts/reset_win_vm_nic.ps1"
        }
    },
    "resources": [
        {
            "condition": true,
            "comments": "Availability Sets",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('avSetInfo')[copyIndex()].availabilitySetName]",
            "apiVersion": "[parameters('deploymentConfig').apiVersions.availabilitySetApiVersion]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "avSetCopy",
                "count": "[length(variables('avSetInfo'))]"
            },
            "properties": {
                "platformFaultDomainCount": "[variables('faultDomains')]",
                "platformUpdateDomainCount": "[variables('updateDomains')]"
            },
            "sku": {
                "name": "[if(equals(variables('managedDisksAligned'),'yes'),'Aligned','Classic')]"
            }
        },
        {
            "condition": true,
            "comments": "Domain Controllers Network Interfaces",
            "name": "[concat(variables('adVMsList')[copyIndex()].name,'-NIC')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('location')]",
            "apiVersion": "[parameters('deploymentConfig').apiVersions.nicApiVersion]",
            "copy": {
                "name": "nicDcCopy",
                "count": "[length(variables('adVMsList'))]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('adVMsList')[copyIndex()].privateIPAddress]",
                            "subnet": {
                                "id": "[variables('adVMsList')[copyIndex()].subnetId]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "condition": true,
            "comments": "Deploying Domain Controllers virtual machines",
            "apiVersion": "[parameters('deploymentConfig').apiVersions.vmApiVersion]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('adVmsList')[copyIndex()].name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "nicDcCopy",
                "avSetCopy"
            ],
            "copy": {
                "name": "adVmsCopy",
                "count": "[length(variables('adVmsList'))]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[variables('adVmsList')[copyIndex()].availabilitySetId]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('adVmsList')[copyIndex()].vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('adVmsList')[copyIndex()].name]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('adVmsList')[copyIndex()].imageInfo]",
                    "osDisk": {
                        "name": "[concat(variables('adVmsList')[copyIndex()].name,'-osdisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('adVmsList')[copyIndex()].storageAccountType]"
                        }
                    },
                    "copy": [
                        {
                            "name": "dataDisks",
                            "count": "[variables('adVmsList')[copyIndex()].dataDiskCount]",
                            "input": {
                                "lun": "[copyIndex('dataDisks')]",
                                "createOption": "Empty",
                                "diskSizeGB": "[variables('adVmsList')[copyIndex()].dataDiskSizeGb]",
                                "managedDisk": {
                                    "storageAccountType": "[variables('adVmsList')[copyIndex()].storageAccountType]"
                                }
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('adVmsList')[copyIndex()].name,'-NIC'))]"
                        }
                    ]
                }
            }
        },
        {
            "condition": true,
            "comments": "Deploys the Active Directory Forest and configures the first Domain Controller",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('adVMsList')[0].name,'/configureDomainControllerVm')]",
            "apiVersion": "[parameters('deploymentConfig').apiVersions.vmExtensionApiVersion]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('adVmsList')[0].name]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.73",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[variables('adForestConfigModuleUrl')]",
                    "sasToken": "[parameters('_artifactsLocationSasToken')]",
                    "configurationFunction": "[variables('primaryDcConfig')]",
                    "properties": {
                        "dnsDomainName": "[parameters('dnsDomainName')]",
                        "adDomainNetBIOSName": "[parameters('adDomainNetBIOSName')]",
                        "dataDiskNumber": 2,
                        "dataDiskDriveLetter": "[variables('domainControllerDataDiskDriveLetter')]",
                        "installDns": true,
                        "domainAdminCredentials": {
                            "userName": "[parameters('adminUsername')]",
                            "password": "PrivateSettingsRef:domainAdminPassword"
                        }
                    }
                },
                "protectedSettings": {
                    "items": {
                        "domainAdminPassword": "[parameters('adminPassword')]"
                    }
                }
            }
        },
        {
            "condition": true,
            "comments": "Updating existing vNet with DNS",
            "name": "[concat(variables('deploymentUniqueString'),'-',parameters('vnetName'),'-vNetUpdate')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('adVMsList')[0].name,'/extensions/configureDomainControllerVm')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('deploymentConfig').libraryItems.updateVnetDnsUri]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "deploymentUniqueString": {
                        "value": "[concat(variables('deploymentUniqueString'),'-updatingVnet')]"
                    },
                    "sasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "vnetId": {
                        "value": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]"
                    },
                    "dnsServers": {
                        "value": "[variables('dnsIpAddresses')]"
                    },
                    "vnetApiVersion": {
                        "value": "[parameters('deploymentConfig').apiVersions.vnetApiVersion]"
                    }
                }
            }
        },
        {
            "condition": true,
            "comments": "Custom Script - Resetting VMs to Join Domain NICs",
            "name": "[concat(variables('deploymentUniqueString'),'-',variables('vmsToReset')[copyIndex()])]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('deploymentConfig').apiVersions.deploymentApiVersion]",
            "copy": {
                "name": "resetNicCopy",
                "count": "[length(variables('vmsToReset'))]"
            },
            "dependsOn": [
                "[concat(variables('deploymentUniqueString'),'-',parameters('vnetName'),'-vNetUpdate')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('deploymentConfig').libraryItems.vmExtensionBuildingBlockUri]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apiVersion": {
                        "value": "[parameters('deploymentConfig').apiVersions.vmExtensionApiVersion]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[variables('vmsToReset')[copyIndex()]]"
                    },
                    "extensionFriendlyName": {
                        "value": "CustomScript"
                    },
                    "extensionType": {
                        "value": "customScriptExtension"
                    },
                    "settings": {
                        "value": "[variables('nicResetScriptSettings')]"
                    },
                    "autoUpgradeMinorVersion": {
                        "value": true
                    },
                    "customScriptExtensionTypeHandlerVersion": {
                        "value": "1.9"
                    }
                }
            }
        },
        {
            "condition": true,
            "comments": "DOMAIN JOIN - Domain joining VMs",
            "name": "[concat(variables('deploymentUniqueString'),'domainJoiningVms')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[parameters('deploymentConfig').apiVersions.deploymentApiVersion]",
            "resourceGroup": "[resourceGroup().name]",
            "dependsOn": [
                "resetNicCopy"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('deploymentConfig').libraryItems.joinVmToDomainUri]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apiVersion": {
                        "value": "[parameters('deploymentConfig').apiVersions.vmExtensionApiVersion]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmList": {
                        "value": "[concat(variables('adVMsList')[1].name)]"
                    },
                    "domainJoinUserName": {
                        "value": "[concat(parameters('adDomainNetBIOSName'),'\\',parameters('adminUsername'))]"
                    },
                    "domainJoinUserPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "domainFQDN": {
                        "value": "[parameters('dnsDomainName')]"
                    }
                }
            }
        },
        {
            "condition": true,
            "comments": "Install additional Domain Controller",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('adVMsList')[1].name,'/configureDomainControllerVm')]",
            "apiVersion": "[parameters('deploymentConfig').apiVersions.vmExtensionApiVersion]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('deploymentUniqueString'),'domainJoiningVms')]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.73",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[variables('additionalDcModuleUrl')]",
                    "sasToken": "[parameters('_artifactsLocationSasToken')]",
                    "configurationFunction": "[variables('additionalDcConfig')]",
                    "properties": {
                        "dnsDomainName": "[parameters('dnsDomainName')]",
                        "adDomainNetBIOSName": "[parameters('adDomainNetBIOSName')]",
                        "dataDiskNumber": 2,
                        "dataDiskDriveLetter": "[variables('domainControllerDataDiskDriveLetter')]",
                        "domainAdminCredentials": {
                            "userName": "[parameters('adminUsername')]",
                            "password": "PrivateSettingsRef:domainAdminPassword"
                        }
                    }
                },
                "protectedSettings": {
                    "items": {
                        "domainAdminPassword": "[parameters('adminPassword')]"
                    }
                }
            }
        },
        {
            "condition": true,
            "comments": "Server core 2016 final configurations",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('adVMsList')[copyIndex()].name,'/CustomScript')]",
            "apiVersion": "[parameters('deploymentConfig').apiVersions.vmExtensionApiVersion]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('adVMsList')[1].name,'/extensions/configureDomainControllerVm')]"
            ],
            "copy": {
                "name": "finalServerCoreConfigCopy",
                "count": "[length(variables('adVMsList'))]"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat(parameters('_artifactsLocation'),'/scripts/w_sc_2016_common_config.ps1', parameters('_artifactsLocationSasToken'))]"
                    ],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ./scripts/w_sc_2016_common_config.ps1',' ',variables('installParams'))]"
                }
            }
        }
    ],
    "outputs": {}
}