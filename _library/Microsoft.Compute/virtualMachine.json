{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmApiVersion": {
      "type": "string",
      "defaultValue": "2017-03-30"
    },
    "nicApiVersion": {
      "type": "string",
      "defaultValue": "2017-05-10"
    },
    "deploymentApiVersion": {
      "type": "string",
      "defaultValue": "2017-05-10"
    },
    "publicIpApiVersion": {
      "type": "string",
      "defaultValue": "2017-11-01"
    },
    "deploymentUniqueString": {
      "type": "string",
      "defaultValue": ""
    },
    "sasToken": {
      "type": "string",
      "defaultValue": ""
    },
    "location": {
      "type": "string"
    },
    "vmNamePrefix": {
      "type": "string"
    },
    "vmCount": {
      "type": "int",
      "defaultValue": 1
    },
    "vmSize": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "attachDataDisks": {
      "type": "string",
      "allowedValues": [
        "yes",
        "no"
      ],
      "defaultValue": "no"
    },
    "dataDiskCount": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1
    },
    "dataDiskSizeGb": {
      "type": "int",
      "defaultValue": 4095
    },
    "useAvailabilitySet": {
      "type": "string",
      "allowedValues": [
        "yes",
        "no"
      ],
      "defaultValue": "no"
    },
    "avSetId": {
      "type": "string",
      "defaultValue": ""
    },
    "imageInfo": {
      "type": "object",
      "defaultValue": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2016-Datacenter",
        "version": "latest"
      }
    },
    "subnetId": {
      "type": "string"
    },
    "includeVmInLoadBalancerBe": {
      "type": "string",
      "allowedValues": [
        "yes",
        "no"
      ],
      "defaultValue": "no"
    },
    "loadBalancerBackEndAddressPoolId": {
      "type": "string",
      "defaultValue": ""
    },
    "includeVmInAppGwBe": {
      "type": "string",
      "allowedValues": [
        "yes",
        "no"
      ],
      "defaultValue": "no"
    },
    "appGwBackEndAddressPoolId": {
      "type": "string",
      "defaultValue": ""
    },
    "assignVmsToLoadBalancerNatRule": {
      "type": "string",
      "allowedValues": [
        "yes",
        "no"
      ],
      "defaultValue": "no"
    },
    "loadBalancerNatRuleId": {
      "type": "string",
      "defaultValue": ""
    },
    "usePublicIpAddress": {
      "type": "string",
      "allowedValues": [
        "yes",
        "no"
      ],
      "defaultValue": "no"
    },
    "publicIpAddressType": {
      "type": "string",
      "allowedValues": [
        "Static",
        "Dynamic"
      ],
      "defaultValue": "Dynamic"
    },
    "privateIpAddressType": {
      "type": "string",
      "allowedValues": [
        "Static",
        "Dynamic"
      ],
      "defaultValue": "Dynamic"
    },
    "privateIpAddress": {
      "type": "string",
      "defaultValue": ""
    },
    "configureDnsServers": {
      "type": "string",
      "allowedValues": [
        "yes",
        "no"
      ],
      "defaultValue": "no"
    },
    "dnsServers": {
      "type": "array",
      "defaultValue": [
        ""
      ]
    },
    "attachNsg": {
      "type": "string",
      "allowedValues": [
        "yes",
        "no"
      ],
      "defaultValue": "no"
    },
    "nsgId": {
      "type": "string",
      "defaultValue": ""
    },
    "completeVmNameProvided": {
      "type": "string",
      "allowedValues": [
        "yes",
        "no"
      ],
      "defaultValue": "no"
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "defaultValue": "Standard_LRS"
    },
    "enableAcceleratedNetworking": {
      "type":"bool",
      "defaultValue": false
    },
    "tags": {
      "type": "object",
      "defaultValue": {}
    },
    "usePlan": {
      "type": "string",
      "allowedValues": [
        "yes",
        "no"
      ],
      "defaultValue": "no"
    },
    "plan": {
      "type": "object",
      "defaultValue": {
        "name": "2019-datacenter",
        "publisher": "microsoft-hyperv",
        "product": "rs5_preview"
      }
    }
  },
  "variables": {
    "nicTemplateName": "networkInterface.json",
    "nicBuildingBlockUrl": "[uri(replace(deployment().properties.templateLink.uri,'Microsoft.Compute','Microsoft.Network'), concat(variables('nicTemplateName'),parameters('sasToken')))]",
    "availabilitySetId": {
      "id": "[if(equals(parameters('useAvailabilitySet'),'yes'),parameters('AvSetId'),json('null'))]"
    }
  },
  "resources": [
    {
      "comments": "Deploying the network interface for multiple VMs - No static IP, No LB NAT Rule",
      "condition": "[greater(parameters('vmCount'),1)]",
      "name": "[if(greater(parameters('vmCount'),1),concat(parameters('deploymentUniqueString'),'-',if(equals(parameters('completeVmNameProvided'),'no'),concat(parameters('vmNamePrefix'),padLeft(copyIndex(1),3,'0')), parameters('vmNamePrefix')),'nicDeployment'),concat('ignore',copyIndex(1)))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[parameters('deploymentApiVersion')]",
      "copy": {
        "name": "nicCopy",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicBuildingBlockUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "tags": {
            "value": "[parameters('tags')]"
          },
          "deploymentUniqueString": {
            "value": "[parameters('deploymentUniqueString')]"
          },
          "nicApiVersion": {
            "value": "[parameters('nicApiVersion')]"
          },
          "publicIpApiVersion": {
            "value": "[parameters('publicIpApiVersion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "nicName": {
            "value": "[concat(if(equals(parameters('completeVmNameProvided'),'no'),concat(parameters('vmNamePrefix'),padLeft(copyIndex(1),3,'0')), parameters('vmNamePrefix')),'-NIC-',padLeft(copyIndex(1),3,'0'))]"
          },
          "subnetId": {
            "value": "[parameters('subnetId')]"
          },
          "usePublicIpAddress": {
            "value": "[parameters('usePublicIpAddress')]"
          },
          "publicIpAddressType": {
            "value": "[parameters('publicIpAddressType')]"
          },
          "includeVmInLoadBalancerBe": {
            "value": "[parameters('includeVmInLoadBalancerBe')]"
          },
          "loadBalancerBackEndAddressPoolId": {
            "value": "[parameters('loadBalancerBackEndAddressPoolId')]"
          },
          "includeVmInAppGwBe": {
            "value": "[parameters('includeVmInAppGwBe')]"
          },
          "AppGwBackEndAddressPoolId": {
            "value": "[parameters('appGwBackEndAddressPoolId')]"
          },
          "attachNsg": {
            "value": "[parameters('attachNsg')]"
          },
          "nsgId": {
            "value": "[parameters('nsgId')]"
          },
          "configureDnsServers": {
            "value": "[parameters('configureDnsServers')]"
          },
          "dnsServers": {
            "value": "[parameters('dnsServers')]"
          },
          "privateIpAddressType": {
            "value": "Dynamic"
          },
          "sasToken": {
            "value": "[parameters('sasToken')]"
          },
          "enableAcceleratedNetworking" :{
            "value":"[parameters('enableAcceleratedNetworking')]"
          }
        }
      }
    },
    {
      "comments": "Deploying the network interface for single VMs - Optionally can add NAT Rule and Static IP",
      "condition": "[equals(parameters('vmCount'),1)]",
      "name": "[if(equals(parameters('vmCount'),1),concat(parameters('deploymentUniqueString'),'-',if(equals(parameters('completeVmNameProvided'),'no'),concat(parameters('vmNamePrefix'),padLeft(copyIndex(1),3,'0')), parameters('vmNamePrefix')),'nicDeployment'),concat('ignore',copyIndex(1)))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "copy": {
        "name": "nicCopy",
        "count": 1
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicBuildingBlockUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "tags": {
            "value": "[parameters('tags')]"
          },
          "deploymentUniqueString": {
            "value": "[parameters('deploymentUniqueString')]"
          },
          "nicApiVersion": {
            "value": "[parameters('nicApiVersion')]"
          },
          "publicIpApiVersion": {
            "value": "[parameters('publicIpApiVersion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "nicName": {
            "value": "[concat(if(equals(parameters('completeVmNameProvided'),'no'),concat(parameters('vmNamePrefix'),padLeft(copyIndex(1),3,'0')), parameters('vmNamePrefix')),'-NIC-',padLeft(copyIndex(1),3,'0'))]"
          },
          "subnetId": {
            "value": "[parameters('subnetId')]"
          },
          "usePublicIpAddress": {
            "value": "[parameters('usePublicIpAddress')]"
          },
          "publicIpAddressType": {
            "value": "[parameters('publicIpAddressType')]"
          },
          "includeVmInLoadBalancerBe": {
            "value": "[parameters('includeVmInLoadBalancerBe')]"
          },
          "loadBalancerBackEndAddressPoolId": {
            "value": "[parameters('loadBalancerBackEndAddressPoolId')]"
          },
          "assignVmsToLoadBalancerNatRule": {
            "value": "[parameters('assignVmsToLoadBalancerNatRule')]"
          },
          "loadBalancerNatRuleId": {
            "value": "[parameters('loadBalancerNatRuleId')]"
          },
          "includeVmInAppGwBe": {
            "value": "[parameters('includeVmInAppGwBe')]"
          },
          "AppGwBackEndAddressPoolId": {
            "value": "[parameters('appGwBackEndAddressPoolId')]"
          },
          "attachNsg": {
            "value": "[parameters('attachNsg')]"
          },
          "nsgId": {
            "value": "[parameters('nsgId')]"
          },
          "configureDnsServers": {
            "value": "[parameters('configureDnsServers')]"
          },
          "dnsServers": {
            "value": "[parameters('dnsServers')]"
          },
          "privateIpAddressType": {
            "value": "[parameters('privateIpAddressType')]"
          },
          "privateIpAddress": {
            "value": "[parameters('privateIpAddress')]"
          },
          "enableAcceleratedNetworking" :{
            "value":"[parameters('enableAcceleratedNetworking')]"
          },
          "sasToken": {
            "value": "[parameters('sasToken')]"
          }
        }
      }
    },
    {
      "comments": "Deploying a virtual machine - with datadisk",
      "condition": "[equals(parameters('attachDataDisks'),'yes')]",
      "apiVersion": "[parameters('vmApiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[if(equals(parameters('attachDataDisks'),'yes'),if(equals(parameters('completeVmNameProvided'),'no'),concat(parameters('vmNamePrefix'),padLeft(copyIndex(1),3,'0')), parameters('vmNamePrefix')),concat('ignore',copyIndex(1)))]",
      "location": "[parameters('location')]",
      "tags": "[if(equals(parameters('tags'),json('null')),json('null'),parameters('tags'))]",
      "dependsOn": [
        "nicCopy"
      ],
      "copy": {
        "name": "vmCopy",
        "count": "[parameters('vmCount')]"
      },
      "plan": "[if(equals(parameters('usePlan'),'yes'),parameters('plan'),json('null'))]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": "[if(equals(parameters('useAvailabilitySet'),'yes'),variables('availabilitySetId'),json('null'))]",
        "osProfile": {
          "computerName": "[if(equals(parameters('completeVmNameProvided'),'no'),concat(parameters('vmNamePrefix'),padLeft(copyIndex(1),3,'0')), parameters('vmNamePrefix'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imageInfo').publisher]",
            "offer": "[parameters('imageInfo').offer]",
            "sku": "[parameters('imageInfo').sku]",
            "version": "[parameters('imageInfo').version]"
          },
          "osDisk": {
            "name": "[concat(if(equals(parameters('completeVmNameProvided'),'no'),concat(parameters('vmNamePrefix'),padLeft(copyIndex(1),3,'0')), parameters('vmNamePrefix')),'-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('storageAccountType')]"
            }
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[parameters('dataDiskCount')]",
              "input": {
                "lun": "[copyIndex('dataDisks')]",
                "createOption": "Empty",
                "diskSizeGB": "[parameters('dataDiskSizeGb')]",
                "managedDisk": {
                  "storageAccountType": "[parameters('storageAccountType')]"
                }
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(if(equals(parameters('completeVmNameProvided'),'no'),concat(parameters('vmNamePrefix'),padLeft(copyIndex(1),3,'0')), parameters('vmNamePrefix')),'-NIC-',padLeft(copyIndex(1),3,'0')))]"
            }
          ]
        }
      }
    },
    {
      "comments": "Deploying a virtual machine - no datadisk",
      "condition": "[equals(parameters('attachDataDisks'),'no')]",
      "apiVersion": "[parameters('vmApiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[if(equals(parameters('attachDataDisks'),'no'),if(equals(parameters('completeVmNameProvided'),'no'),concat(parameters('vmNamePrefix'),padLeft(copyIndex(1),3,'0')), parameters('vmNamePrefix')),concat('ignore',copyIndex(1)))]",
      "location": "[parameters('location')]",
      "tags": "[if(equals(parameters('tags'),json('null')),json('null'),parameters('tags'))]",
      "dependsOn": [
        "nicCopy"
      ],
      "copy": {
        "name": "vmCopy",
        "count": "[parameters('vmCount')]"
      },
      "plan": "[if(equals(parameters('usePlan'),'yes'),parameters('plan'),json('null'))]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": "[if(equals(parameters('useAvailabilitySet'),'yes'),variables('availabilitySetId'),json('null'))]",
        "osProfile": {
          "computerName": "[if(equals(parameters('completeVmNameProvided'),'no'),concat(parameters('vmNamePrefix'),padLeft(copyIndex(1),3,'0')), parameters('vmNamePrefix'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imageInfo').publisher]",
            "offer": "[parameters('imageInfo').offer]",
            "sku": "[parameters('imageInfo').sku]",
            "version": "[parameters('imageInfo').version]"
          },
          "osDisk": {
            "name": "[concat(if(equals(parameters('completeVmNameProvided'),'no'),concat(parameters('vmNamePrefix'),padLeft(copyIndex(1),3,'0')), parameters('vmNamePrefix')),'-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(if(equals(parameters('completeVmNameProvided'),'no'),concat(parameters('vmNamePrefix'),padLeft(copyIndex(1),3,'0')), parameters('vmNamePrefix')),'-NIC-',padLeft(copyIndex(1),3,'0')))]"
            }
          ]
        }
      }
    }
  ]
}
